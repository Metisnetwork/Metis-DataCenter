<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.rosettanet.storage.dao.DataServerMapper">
  <resultMap id="BaseResultMap" type="com.platon.rosettanet.storage.dao.entity.DataServer">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="identity_id" jdbcType="VARCHAR" property="identityId" />
    <result column="server_name" jdbcType="VARCHAR" property="serverName" />
    <result column="internal_ip" jdbcType="VARCHAR" property="internalIp" />
    <result column="internal_port" jdbcType="VARCHAR" property="internalPort" />
    <result column="external_ip" jdbcType="VARCHAR" property="externalIp" />
    <result column="external_port" jdbcType="VARCHAR" property="externalPort" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="published" jdbcType="BIT" property="published" />
    <result column="published_at" jdbcType="TIMESTAMP" property="publishedAt" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, identity_id, server_name, internal_ip, internal_port, external_ip, external_port, 
    remarks, published, published_at, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from data_server
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <update id="deleteByPrimaryKey" parameterType="java.lang.String">
    update data_server set status = 'disabled'
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="insert" parameterType="com.platon.rosettanet.storage.dao.entity.DataServer">
    insert into data_server (id, identity_id, server_name, 
      internal_ip, internal_port, external_ip, 
      external_port, remarks, published, 
      published_at, status)
    values (#{id,jdbcType=VARCHAR}, #{identityId,jdbcType=VARCHAR}, #{serverName,jdbcType=VARCHAR}, 
      #{internalIp,jdbcType=VARCHAR}, #{internalPort,jdbcType=VARCHAR}, #{externalIp,jdbcType=VARCHAR}, 
      #{externalPort,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{published,jdbcType=BIT}, 
      #{publishedAt,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.platon.rosettanet.storage.dao.entity.DataServer">
    insert into data_server
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="identityId != null">
        identity_id,
      </if>
      <if test="serverName != null">
        server_name,
      </if>
      <if test="internalIp != null">
        internal_ip,
      </if>
      <if test="internalPort != null">
        internal_port,
      </if>
      <if test="externalIp != null">
        external_ip,
      </if>
      <if test="externalPort != null">
        external_port,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="published != null">
        published,
      </if>
      <if test="publishedAt != null">
        published_at,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="identityId != null">
        #{identityId,jdbcType=VARCHAR},
      </if>
      <if test="serverName != null">
        #{serverName,jdbcType=VARCHAR},
      </if>
      <if test="internalIp != null">
        #{internalIp,jdbcType=VARCHAR},
      </if>
      <if test="internalPort != null">
        #{internalPort,jdbcType=VARCHAR},
      </if>
      <if test="externalIp != null">
        #{externalIp,jdbcType=VARCHAR},
      </if>
      <if test="externalPort != null">
        #{externalPort,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="published != null">
        #{published,jdbcType=BIT},
      </if>
      <if test="publishedAt != null">
        #{publishedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.platon.rosettanet.storage.dao.entity.DataServer">
    update data_server
    <set>
      <if test="identityId != null">
        identity_id = #{identityId,jdbcType=VARCHAR},
      </if>
      <if test="serverName != null">
        server_name = #{serverName,jdbcType=VARCHAR},
      </if>
      <if test="internalIp != null">
        internal_ip = #{internalIp,jdbcType=VARCHAR},
      </if>
      <if test="internalPort != null">
        internal_port = #{internalPort,jdbcType=VARCHAR},
      </if>
      <if test="externalIp != null">
        external_ip = #{externalIp,jdbcType=VARCHAR},
      </if>
      <if test="externalPort != null">
        external_port = #{externalPort,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="published != null">
        published = #{published,jdbcType=BIT},
      </if>
      <if test="publishedAt != null">
        published_at = #{publishedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platon.rosettanet.storage.dao.entity.DataServer">
    update data_server
    set identity_id = #{identityId,jdbcType=VARCHAR},
      server_name = #{serverName,jdbcType=VARCHAR},
      internal_ip = #{internalIp,jdbcType=VARCHAR},
      internal_port = #{internalPort,jdbcType=VARCHAR},
      external_ip = #{externalIp,jdbcType=VARCHAR},
      external_port = #{externalPort,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      published = #{published,jdbcType=BIT},
      published_at = #{publishedAt,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
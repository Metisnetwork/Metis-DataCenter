<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.metis.storage.dao.TaskInfoMapper">
  <resultMap id="BaseResultMap" type="com.platon.metis.storage.dao.entity.TaskInfo">
    <!--@mbg.generated-->
    <!--@Table task_info-->
    <id column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="data_id" jdbcType="VARCHAR" property="dataId" />
    <result column="data_status" jdbcType="TINYINT" property="dataStatus" />
    <result column="user" jdbcType="VARCHAR" property="user" />
    <result column="user_type" jdbcType="TINYINT" property="userType" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="data_policy_types" jdbcType="VARCHAR" property="dataPolicyTypes" />
    <result column="power_policy_types" jdbcType="VARCHAR" property="powerPolicyTypes" />
    <result column="data_flow_policy_types" jdbcType="VARCHAR" property="dataFlowPolicyTypes" />
    <result column="meta_algorithm_id" jdbcType="VARCHAR" property="metaAlgorithmId" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="start_at" jdbcType="TIMESTAMP" property="startAt" />
    <result column="end_at" jdbcType="TIMESTAMP" property="endAt" />
    <result column="sign" jdbcType="LONGVARCHAR" property="sign" />
    <result column="nonce" jdbcType="INTEGER" property="nonce" />
    <result column="init_memory" jdbcType="BIGINT" property="initMemory" />
    <result column="init_processor" jdbcType="INTEGER" property="initProcessor" />
    <result column="init_bandwidth" jdbcType="BIGINT" property="initBandwidth" />
    <result column="init_duration" jdbcType="INTEGER" property="initDuration" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    task_id, data_id, data_status, `user`, user_type, task_name, data_policy_types, power_policy_types, 
    data_flow_policy_types, meta_algorithm_id, `state`, reason, `desc`, create_at, start_at, 
    end_at, sign, nonce, init_memory, init_processor, init_bandwidth, init_duration
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from task_info
    where task_id = #{taskId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--@mbg.generated-->
    delete from task_info
    where task_id = #{taskId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.platon.metis.storage.dao.entity.TaskInfo">
    <!--@mbg.generated-->
    insert into task_info (task_id, data_id, data_status, 
      `user`, user_type, task_name, 
      data_policy_types, power_policy_types, data_flow_policy_types, 
      meta_algorithm_id, `state`, reason, 
      `desc`, create_at, start_at, 
      end_at, sign, nonce, 
      init_memory, init_processor, init_bandwidth, 
      init_duration)
    values (#{taskId,jdbcType=VARCHAR}, #{dataId,jdbcType=VARCHAR}, #{dataStatus,jdbcType=TINYINT}, 
      #{user,jdbcType=VARCHAR}, #{userType,jdbcType=TINYINT}, #{taskName,jdbcType=VARCHAR}, 
      #{dataPolicyTypes}, #{powerPolicyTypes}, #{dataFlowPolicyTypes},
      #{metaAlgorithmId,jdbcType=INTEGER}, #{state,jdbcType=TINYINT}, #{reason,jdbcType=VARCHAR}, 
      #{desc,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{startAt,jdbcType=TIMESTAMP}, 
      #{endAt,jdbcType=TIMESTAMP}, #{sign,jdbcType=LONGVARCHAR}, #{nonce,jdbcType=INTEGER}, 
      #{initMemory,jdbcType=BIGINT}, #{initProcessor,jdbcType=INTEGER}, #{initBandwidth,jdbcType=BIGINT}, 
      #{initDuration,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.platon.metis.storage.dao.entity.TaskInfo">
    <!--@mbg.generated-->
    insert into task_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      <if test="dataId != null">
        data_id,
      </if>
      <if test="dataStatus != null">
        data_status,
      </if>
      <if test="user != null">
        `user`,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="taskName != null">
        task_name,
      </if>
      <if test="dataPolicyTypes != null">
        data_policy_types,
      </if>
      <if test="powerPolicyTypes != null">
        power_policy_types,
      </if>
      <if test="dataFlowPolicyTypes != null">
        data_flow_policy_types,
      </if>
      <if test="metaAlgorithmId != null">
        meta_algorithm_id,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="desc != null">
        `desc`,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="startAt != null">
        start_at,
      </if>
      <if test="endAt != null">
        end_at,
      </if>
      <if test="sign != null">
        sign,
      </if>
      <if test="nonce != null">
        nonce,
      </if>
      <if test="initMemory != null">
        init_memory,
      </if>
      <if test="initProcessor != null">
        init_processor,
      </if>
      <if test="initBandwidth != null">
        init_bandwidth,
      </if>
      <if test="initDuration != null">
        init_duration,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="dataId != null">
        #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="dataStatus != null">
        #{dataStatus,jdbcType=TINYINT},
      </if>
      <if test="user != null">
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=TINYINT},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="dataPolicyTypes != null">
        #{dataPolicyTypes},
      </if>
      <if test="powerPolicyTypes != null">
        #{powerPolicyTypes},
      </if>
      <if test="dataFlowPolicyTypes != null">
        #{dataFlowPolicyTypes},
      </if>
      <if test="metaAlgorithmId != null">
        #{metaAlgorithmId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="startAt != null">
        #{startAt,jdbcType=TIMESTAMP},
      </if>
      <if test="endAt != null">
        #{endAt,jdbcType=TIMESTAMP},
      </if>
      <if test="sign != null">
        #{sign,jdbcType=LONGVARCHAR},
      </if>
      <if test="nonce != null">
        #{nonce,jdbcType=INTEGER},
      </if>
      <if test="initMemory != null">
        #{initMemory,jdbcType=BIGINT},
      </if>
      <if test="initProcessor != null">
        #{initProcessor,jdbcType=INTEGER},
      </if>
      <if test="initBandwidth != null">
        #{initBandwidth,jdbcType=BIGINT},
      </if>
      <if test="initDuration != null">
        #{initDuration,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.platon.metis.storage.dao.entity.TaskInfo">
    <!--@mbg.generated-->
    update task_info
    <set>
      <if test="dataId != null">
        data_id = #{dataId,jdbcType=VARCHAR},
      </if>
      <if test="dataStatus != null">
        data_status = #{dataStatus,jdbcType=TINYINT},
      </if>
      <if test="user != null">
        `user` = #{user,jdbcType=VARCHAR},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=TINYINT},
      </if>
      <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="dataPolicyTypes != null">
        data_policy_types = #{dataPolicyTypes},
      </if>
      <if test="powerPolicyTypes != null">
        power_policy_types = #{powerPolicyTypes},
      </if>
      <if test="dataFlowPolicyTypes != null">
        data_flow_policy_types = #{dataFlowPolicyTypes},
      </if>
      <if test="metaAlgorithmId != null">
        meta_algorithm_id = #{metaAlgorithmId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=TINYINT},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="desc != null">
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="startAt != null">
        start_at = #{startAt,jdbcType=TIMESTAMP},
      </if>
      <if test="endAt != null">
        end_at = #{endAt,jdbcType=TIMESTAMP},
      </if>
      <if test="sign != null">
        sign = #{sign,jdbcType=LONGVARCHAR},
      </if>
      <if test="nonce != null">
        nonce = #{nonce,jdbcType=INTEGER},
      </if>
      <if test="initMemory != null">
        init_memory = #{initMemory,jdbcType=BIGINT},
      </if>
      <if test="initProcessor != null">
        init_processor = #{initProcessor,jdbcType=INTEGER},
      </if>
      <if test="initBandwidth != null">
        init_bandwidth = #{initBandwidth,jdbcType=BIGINT},
      </if>
      <if test="initDuration != null">
        init_duration = #{initDuration,jdbcType=INTEGER},
      </if>
    </set>
    where task_id = #{taskId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platon.metis.storage.dao.entity.TaskInfo">
    <!--@mbg.generated-->
    update task_info
    set data_id = #{dataId,jdbcType=VARCHAR},
      data_status = #{dataStatus,jdbcType=TINYINT},
      `user` = #{user,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=TINYINT},
      task_name = #{taskName,jdbcType=VARCHAR},
      data_policy_types = #{dataPolicyTypes},
      power_policy_types = #{powerPolicyTypes},
      data_flow_policy_types = #{dataFlowPolicyTypes},
      meta_algorithm_id = #{metaAlgorithmId,jdbcType=INTEGER},
      `state` = #{state,jdbcType=TINYINT},
      reason = #{reason,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      start_at = #{startAt,jdbcType=TIMESTAMP},
      end_at = #{endAt,jdbcType=TIMESTAMP},
      sign = #{sign,jdbcType=LONGVARCHAR},
      nonce = #{nonce,jdbcType=INTEGER},
      init_memory = #{initMemory,jdbcType=BIGINT},
      init_processor = #{initProcessor,jdbcType=INTEGER},
      init_bandwidth = #{initBandwidth,jdbcType=BIGINT},
      init_duration = #{initDuration,jdbcType=INTEGER}
    where task_id = #{taskId,jdbcType=VARCHAR}
  </update>

  <select id="syncTaskInfo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from task_info
    where end_at > #{lastUpdatedAt,jdbcType=TIMESTAMP}
    order by end_at
    limit 0, #{limit,jdbcType=BIGINT}
  </select>

  <select id="listTaskInfoByIdentityId" resultMap="BaseResultMap">
    select t1.*
    from task_info t1
    inner join (select distinct task_id from task_org where identity_id = #{identityId}) t2 on t1.task_id = t2.task_id
    where t1.end_at > #{lastUpdatedAt,jdbcType=TIMESTAMP}
    order by t1.end_at
    limit 0, #{limit,jdbcType=BIGINT}
  </select>


  <select id="listTaskInfoByTaskIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from task_info
    where task_id in
    <foreach collection="taskIdList" item="taskId" index="index"  open="(" separator="," close=")">
      #{taskId}
    </foreach>
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.metis.storage.dao.DataFileMapper">
  <resultMap id="BaseResultMap" type="com.platon.metis.storage.dao.entity.DataFile">
    <id column="meta_data_id" jdbcType="VARCHAR" property="metaDataId" />
    <result column="origin_id" jdbcType="VARCHAR" property="originId" />
    <result column="identity_id" jdbcType="VARCHAR" property="identityId" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="file_type" jdbcType="INTEGER" property="fileType" />
    <result column="resource_name" jdbcType="VARCHAR" property="resourceName" />
    <result column="industry" jdbcType="VARCHAR" property="industry" />
    <result column="size" jdbcType="BIGINT" property="size" />
    <result column="rows" jdbcType="BIGINT" property="rows" />
    <result column="columns" jdbcType="INTEGER" property="columns" />
    <result column="published" jdbcType="BIT" property="published" />
    <result column="published_at" jdbcType="TIMESTAMP" property="publishedAt" />
    <result column="has_title" jdbcType="BIT" property="hasTitle" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="dfs_data_status" jdbcType="INTEGER" property="dfsDataStatus" />
    <result column="dfs_data_id" jdbcType="VARCHAR" property="dfsDataId" />
  </resultMap>
  <sql id="Base_Column_List">
    meta_data_id, origin_id, identity_id, file_name, file_path, file_type, resource_name, industry, `size`, `rows`, columns,
    published, published_at, has_title, remarks, status, update_at, dfs_data_status, dfs_data_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from data_file
    where meta_data_id = #{metaDataId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    update data_file
    set status = 3, published = false
    where meta_data_id = #{metaDataId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.platon.metis.storage.dao.entity.DataFile">
    insert into data_file (meta_data_id, origin_id, identity_id, file_name,
      file_path, file_type, resource_name, industry,
      `size`, `rows`, columns,
      published, published_at, has_title, 
      remarks, status, dfs_data_status, dfs_data_id
      )
    values ( #{metaDataId,jdbcType=VARCHAR}, #{originId,jdbcType=VARCHAR}, #{identityId,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR},
      #{filePath,jdbcType=VARCHAR}, #{fileType,jdbcType=INTEGER}, #{resourceName,jdbcType=VARCHAR}, #{industry,jdbcType=VARCHAR},
      #{size,jdbcType=BIGINT}, #{rows,jdbcType=BIGINT}, #{columns,jdbcType=INTEGER},
      #{published,jdbcType=BIT}, #{publishedAt,jdbcType=TIMESTAMP}, #{hasTitle,jdbcType=BIT}, 
      #{remarks,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{dfsDataStatus,jdbcType=INTEGER}, #{dfsDataId,jdbcType=VARCHAR}
      )
  </insert>

  <insert id="insertBatch">
    insert into data_file (meta_data_id, origin_id, identity_id, file_name,
      file_path, file_type, resource_name, industry,
      `size`, `rows`, columns,
      published, published_at, has_title,
      remarks, status, dfs_data_status, dfs_data_id
      )
    values
    <foreach collection ="list" item="item" separator =",">
    (#{item.metaDataId,jdbcType=VARCHAR}, #{item.originId,jdbcType=VARCHAR}, #{item.identityId,jdbcType=VARCHAR}, #{item.fileName,jdbcType=VARCHAR},
      #{item.filePath,jdbcType=VARCHAR}, #{item.fileType,jdbcType=INTEGER}, #{item.resourceName,jdbcType=VARCHAR}, #{item.industry,jdbcType=VARCHAR},
      #{item.size,jdbcType=BIGINT}, #{item.rows,jdbcType=BIGINT}, #{item.columns,jdbcType=INTEGER},
      #{item.published,jdbcType=BIT}, #{item.publishedAt,jdbcType=TIMESTAMP}, #{item.hasTitle,jdbcType=BIT},
      #{item.remarks,jdbcType=VARCHAR}, #{item.status,jdbcType=INTEGER}, #{item.dfsDataStatus,jdbcType=INTEGER}, #{item.dfsDataId,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>


  <insert id="insertSelective" parameterType="com.platon.metis.storage.dao.entity.DataFile">
    insert into data_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="metaDataId != null">
        meta_data_id,
      </if>
      <if test="originId != null">
        origin_id,
      </if>
      <if test="identityId != null">
        identity_id,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="resourceName != null">
        resource_name,
      </if>
      <if test="industry != null">
        industry,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="rows != null">
        rows,
      </if>
      <if test="columns != null">
        columns,
      </if>
      <if test="published != null">
        published,
      </if>
      <if test="publishedAt != null">
        published_at,
      </if>
      <if test="hasTitle != null">
        has_title,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="dfsDataStatus != null">
        dfs_data_status,
      </if>
      <if test="dfsDataId != null">
        dfs_data_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="metaDataId != null">
        #{metaDataId,jdbcType=VARCHAR},
      </if>
      <if test="originId != null">
        #{originId,jdbcType=VARCHAR},
      </if>
      <if test="identityId != null">
        #{identityId,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=INTEGER},
      </if>
      <if test="resourceName != null">
        #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="industry != null">
        #{industry,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=BIGINT},
      </if>
      <if test="rows != null">
        #{rows,jdbcType=BIGINT},
      </if>
      <if test="columns != null">
        #{columns,jdbcType=INTEGER},
      </if>
      <if test="published != null">
        #{published,jdbcType=BIT},
      </if>
      <if test="publishedAt != null">
        #{publishedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="hasTitle != null">
        #{hasTitle,jdbcType=BIT},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="dfsDataStatus != null">
        #{dfsDataStatus},
      </if>
      <if test="dfsDataId != null">
        #{dfsDataId},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.platon.metis.storage.dao.entity.DataFile">
    update data_file
    <set>
      <if test="originId != null">
        origin_id = #{originId,jdbcType=VARCHAR},
      </if>
      <if test="identityId != null">
        identity_id = #{identityId,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        file_type = #{fileType,jdbcType=INTEGER},
      </if>
      <if test="resourceName != null">
        resource_name = #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="industry != null">
        industry = #{industry,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        `size` = #{size,jdbcType=BIGINT},
      </if>
      <if test="rows != null">
        `rows` = #{rows,jdbcType=BIGINT},
      </if>
      <if test="columns != null">
        columns = #{columns,jdbcType=INTEGER},
      </if>
      <if test="published != null">
        published = #{published,jdbcType=BIT},
      </if>
      <if test="publishedAt != null">
        published_at = #{publishedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="hasTitle != null">
        has_title = #{hasTitle,jdbcType=BIT},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="dfsDataStatus != null">
        dfs_data_status = #{dfsDataStatus},
      </if>
      <if test="dfsDataId != null">
        dfs_data_id = #{dfsDataId},
      </if>
    </set>
    where meta_data_id = #{meta_data_id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platon.metis.storage.dao.entity.DataFile">
    update data_file
    set origin_id = #{originId,jdbcType=VARCHAR},
      identity_id = #{identityId,jdbcType=VARCHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_path = #{filePath,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=INTEGER},
      resource_name = #{resourceName,jdbcType=VARCHAR},
      industry = #{industry,jdbcType=VARCHAR},
      `size` = #{size,jdbcType=BIGINT},
      `rows` = #{rows,jdbcType=BIGINT},
      columns = #{columns,jdbcType=INTEGER},
      published = #{published,jdbcType=BIT},
      published_at = #{publishedAt,jdbcType=TIMESTAMP},
      has_title = #{hasTitle,jdbcType=BIT},
      remarks = #{remarks,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      dfs_data_status = #{dfsDataStatus,jdbcType=INTEGER},
      dfs_data_id = #{dfsDataId}
    where meta_data_id = #{metaDataId,jdbcType=VARCHAR}
  </update>

  <select id="listDataFile"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from data_file
    where status = #{status,jdbcType=INTEGER} and update_at <![CDATA[ > ]]> #{lastUpdatedAt,jdbcType=TIMESTAMP}
    order by update_at
    limit 0, #{limit,jdbcType=BIGINT}
  </select>

  <select id="syncDataFile" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from data_file
    where update_at <![CDATA[ > ]]> #{lastUpdatedAt,jdbcType=TIMESTAMP}
    order by update_at
    limit 0, #{limit,jdbcType=BIGINT}
  </select>

  <select id="syncDataFileByIdentityId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from data_file
    where  identity_id = #{identityId,jdbcType=VARCHAR} and update_at <![CDATA[ > ]]> #{lastUpdatedAt,jdbcType=TIMESTAMP}
    order by update_at
    limit 0, #{limit,jdbcType=BIGINT}
  </select>


  <update id="updateStatus">
    update data_file
    set status = #{status,jdbcType=INTEGER}, published = false
    where meta_data_id = #{metaDataId,jdbcType=VARCHAR}
  </update>
</mapper>
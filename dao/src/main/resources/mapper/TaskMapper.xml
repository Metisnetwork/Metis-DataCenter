<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.rosettanet.storage.dao.TaskMapper">
  <resultMap id="BaseResultMap" type="com.platon.rosettanet.storage.dao.entity.Task">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="required_memory" jdbcType="BIGINT" property="requiredMemory" />
    <result column="required_core" jdbcType="INTEGER" property="requiredCore" />
    <result column="required_bandwidth" jdbcType="BIGINT" property="requiredBandwidth" />
    <result column="required_duration" jdbcType="BIGINT" property="requiredDuration" />
    <result column="owner_identity_id" jdbcType="VARCHAR" property="ownerIdentityId" />
    <result column="owner_party_id" jdbcType="VARCHAR" property="ownerPartyId" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="start_at" jdbcType="TIMESTAMP" property="startAt" />
    <result column="end_at" jdbcType="TIMESTAMP" property="endAt" />
    <result column="used_memory" jdbcType="BIGINT" property="usedMemory" />
    <result column="used_core" jdbcType="INTEGER" property="usedCore" />
    <result column="used_bandwidth" jdbcType="BIGINT" property="usedBandwidth" />
    <result column="used_file_size" jdbcType="BIGINT" property="usedFileSize" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, task_name, required_memory, required_core, required_bandwidth, required_duration, 
    owner_identity_id, owner_party_id, create_at, start_at, end_at, used_memory, used_core, used_bandwidth, used_file_size,
    status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from task
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.platon.rosettanet.storage.dao.entity.Task">
    insert into task (id, task_name, required_memory, 
      required_core, required_bandwidth, required_duration, 
      owner_identity_id, owner_party_id, create_at, start_at,
      end_at, used_memory, used_core, 
      used_bandwidth, used_file_size, status)
    values (#{id,jdbcType=VARCHAR}, #{taskName,jdbcType=VARCHAR}, #{requiredMemory,jdbcType=BIGINT}, 
      #{requiredCore,jdbcType=INTEGER}, #{requiredBandwidth,jdbcType=BIGINT}, #{requiredDuration,jdbcType=BIGINT}, 
      #{ownerIdentityId,jdbcType=VARCHAR}, #{ownerPartyId,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{startAt,jdbcType=TIMESTAMP},
      #{endAt,jdbcType=TIMESTAMP}, #{usedMemory,jdbcType=BIGINT}, #{usedCore,jdbcType=INTEGER}, 
      #{usedBandwidth,jdbcType=BIGINT}, #{usedFileSize,jdbcType=BIGINT}, #{status,jdbcType=VARCHAR})
  </insert>

  <insert id="insertBatch">
    insert into task (id, task_name, required_memory,
      required_core, required_bandwidth, required_duration,
      owner_identity_id, owner_party_id, create_at, start_at,
      end_at, used_memory, used_core,
      used_bandwidth, used_file_size, status)
    values
    <foreach collection ="list" item="item" separator =",">
    (#{item.id,jdbcType=VARCHAR}, #{item.taskName,jdbcType=VARCHAR}, #{item.requiredMemory,jdbcType=BIGINT},
      #{item.requiredCore,jdbcType=INTEGER}, #{item.requiredBandwidth,jdbcType=BIGINT}, #{item.requiredDuration,jdbcType=BIGINT},
      #{item.ownerIdentityId,jdbcType=VARCHAR}, #{item.ownerPartyId,jdbcType=VARCHAR}, #{item.createAt,jdbcType=TIMESTAMP}, #{item.startAt,jdbcType=TIMESTAMP},
      #{item.endAt,jdbcType=TIMESTAMP}, #{item.usedMemory,jdbcType=BIGINT}, #{item.usedCore,jdbcType=INTEGER},
      #{item.usedBandwidth,jdbcType=BIGINT}, #{item.usedFileSize,jdbcType=BIGINT}, #{item.status,jdbcType=VARCHAR})
    </foreach>
  </insert>


  <insert id="insertSelective" parameterType="com.platon.rosettanet.storage.dao.entity.Task">
    insert into task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="taskName != null">
        task_name,
      </if>
      <if test="requiredMemory != null">
        required_memory,
      </if>
      <if test="requiredCore != null">
        required_core,
      </if>
      <if test="requiredBandwidth != null">
        required_bandwidth,
      </if>
      <if test="requiredDuration != null">
        required_duration,
      </if>
      <if test="ownerIdentityId != null">
        owner_identity_id,
      </if>
      <if test="ownerPartyId != null">
        owner_party_id,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="startAt != null">
        start_at,
      </if>
      <if test="endAt != null">
        end_at,
      </if>
      <if test="usedMemory != null">
        used_memory,
      </if>
      <if test="usedCore != null">
        used_core,
      </if>
      <if test="usedBandwidth != null">
        used_bandwidth,
      </if>
      <if test="usedFileSize != null">
        used_file_size,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="requiredMemory != null">
        #{requiredMemory,jdbcType=BIGINT},
      </if>
      <if test="requiredCore != null">
        #{requiredCore,jdbcType=INTEGER},
      </if>
      <if test="requiredBandwidth != null">
        #{requiredBandwidth,jdbcType=BIGINT},
      </if>
      <if test="requiredDuration != null">
        #{requiredDuration,jdbcType=BIGINT},
      </if>
      <if test="ownerIdentityId != null">
        #{ownerIdentityId,jdbcType=VARCHAR},
      </if>
      <if test="ownerPartyId != null">
        #{ownerPartyId,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="startAt != null">
        #{startAt,jdbcType=TIMESTAMP},
      </if>
      <if test="endAt != null">
        #{endAt,jdbcType=TIMESTAMP},
      </if>
      <if test="usedMemory != null">
        #{usedMemory,jdbcType=BIGINT},
      </if>
      <if test="usedCore != null">
        #{usedCore,jdbcType=INTEGER},
      </if>
      <if test="usedBandwidth != null">
        #{usedBandwidth,jdbcType=BIGINT},
      </if>
      <if test="usedFileSize != null">
        #{usedFileSize,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.platon.rosettanet.storage.dao.entity.Task">
    update task
    <set>
      <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="requiredMemory != null">
        required_memory = #{requiredMemory,jdbcType=BIGINT},
      </if>
      <if test="requiredCore != null">
        required_core = #{requiredCore,jdbcType=INTEGER},
      </if>
      <if test="requiredBandwidth != null">
        required_bandwidth = #{requiredBandwidth,jdbcType=BIGINT},
      </if>
      <if test="requiredDuration != null">
        required_duration = #{requiredDuration,jdbcType=BIGINT},
      </if>
      <if test="ownerIdentityId != null">
        owner_identity_id = #{ownerIdentityId,jdbcType=VARCHAR},
      </if>
      <if test="ownerPartyId != null">
        owner_party_id = #{ownerPartyId,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="startAt != null">
        start_at = #{startAt,jdbcType=TIMESTAMP},
      </if>
      <if test="endAt != null">
        end_at = #{endAt,jdbcType=TIMESTAMP},
      </if>
      <if test="usedMemory != null">
        used_memory = #{usedMemory,jdbcType=BIGINT},
      </if>
      <if test="usedCore != null">
        used_core = #{usedCore,jdbcType=INTEGER},
      </if>
      <if test="usedBandwidth != null">
        used_bandwidth = #{usedBandwidth,jdbcType=BIGINT},
      </if>
      <if test="usedFileSize != null">
        used_file_size = #{usedFileSize,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platon.rosettanet.storage.dao.entity.Task">
    update task
    set task_name = #{taskName,jdbcType=VARCHAR},
      required_memory = #{requiredMemory,jdbcType=BIGINT},
      required_core = #{requiredCore,jdbcType=INTEGER},
      required_bandwidth = #{requiredBandwidth,jdbcType=BIGINT},
      required_duration = #{requiredDuration,jdbcType=BIGINT},
      owner_identity_id = #{ownerIdentityId,jdbcType=VARCHAR},
      owner_party_id = #{ownerPartyId,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      start_at = #{startAt,jdbcType=TIMESTAMP},
      end_at = #{endAt,jdbcType=TIMESTAMP},
      used_memory = #{usedMemory,jdbcType=BIGINT},
      used_core = #{usedCore,jdbcType=INTEGER},
      used_bandwidth = #{usedBandwidth,jdbcType=BIGINT},
      used_file_size = #{usedFileSize,jdbcType=BIGINT},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="listTask" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from task
    order by create_at
  </select>


  <select id="countTask" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(id)
    from task
    where owner_identity_id = #{ownerIdentityId,jdbcType=VARCHAR}
  </select>
</mapper>
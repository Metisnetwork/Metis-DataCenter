syntax = "proto3";

package api;

option go_package = "github.com/RosettaFlow/Carrier-Go/lib/center/api";
option java_multiple_files = true;
option java_package = "com.platon.rosettanet.storage.grpc.lib.api";

import "lib/common/base.proto";
import "lib/types/resourcedata.proto";
import "google/protobuf/empty.proto";

// 算力的基本仨元素
message PurePower {
  // 系统的总内存
  uint64 mem = 1;
  // 系统的总内核数
  uint32 processor = 2;
  // 系统的总带宽数
  uint64 bandwidth = 3;
}

// 发布算力请求参数
message PublishPowerRequest {
  // 算力的拥有者
  api.protobuf.Organization owner = 1;
  // 算力ID
  string power_id = 2;
  // 发布的算力信息
  PurePower information = 3;
}

message PublishPowerResponse {
  int32  status = 1;
  string msg = 2;
  // 算力id
  string power_id = 3;
}

message RevokePowerRequest {
  // 算力的拥有者
  api.protobuf.Organization owner = 1;
  // 算力id
  string power_id = 2;
}

//  总算力摘要
message PowerTotalSummary {
  // 算力实况
  types.ResourceUsageOverview information = 1;
  // 算力上总共执行的任务数 (已完成的和正在执行的)
  uint32 total_task_count = 2;
  // 算力状态 (create: 还未发布的算力; release: 已发布的算力; revoke: 已撤销的算力)
  api.protobuf.PowerState state = 3;
}

message PowerTotalSummaryResponse {
  // 算力拥有者信息
  api.protobuf.Organization owner = 1;
  // 算力总摘要
  PowerTotalSummary power_total_summary = 2;
}

message PowerTotalSummaryListResponse {
  // 全网的算力总摘要列表
  repeated PowerTotalSummaryResponse powers = 1;
}

message PowerSummaryByIdentityRequest {
  // 身份ID
  string identity_id = 1;
}

message PowerListRequest {
  uint64 last_updated = 1;
}

message PowerListResponse {
  repeated types.Power powers           = 1;
  uint64               last_updated = 2;
}

message SyncPowerRequest {
  types.Power power = 1;
}

// 资源（算力）接口定义
service ResourceService {

  // 存储资源
  rpc PublishPower (PublishPowerRequest) returns (api.protobuf.SimpleResponse);

  // 新增，算力同步，实时通知算力的使用情况（组织下的具体的服务器）
  rpc SyncPower(SyncPowerRequest) returns(api.protobuf.SimpleResponse);

  // 撤销资源
  rpc RevokePower (RevokePowerRequest) returns (api.protobuf.SimpleResponse);

  // 新增，用于同步给管理台，获取所有算力资源信息
  rpc GetPowerList(PowerListRequest) returns (PowerListResponse);

  // 查看指定节点的总算力摘要
  rpc GetPowerSummaryByIdentityId (PowerSummaryByIdentityRequest) returns (PowerTotalSummaryResponse);

  // 查看各个组织的总算力摘要列表
  rpc GetPowerTotalSummaryList (google.protobuf.Empty) returns (PowerTotalSummaryListResponse);

}